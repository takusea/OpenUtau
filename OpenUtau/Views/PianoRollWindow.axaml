<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:OpenUtau.App.ViewModels"
        xmlns:api="using:OpenUtau.Api"
        xmlns:c="clr-namespace:OpenUtau.App.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="OpenUtau.App.Views.PianoRollWindow"
        Icon="/Assets/open-utau.ico"
        Title="{Binding NotesViewModel.WindowTitle}" MinWidth="300" MinHeight="200" KeyDown="OnKeyDown" Closing="WindowClosing"
        TransparencyLevelHint="None"
        ExtendClientAreaToDecorationsHint="{Binding ExtendToFrame}" Deactivated="WindowDeactivated">
  <Window.Styles>
    <StyleInclude Source="/Styles/PianoRollStyles.axaml"/>
  </Window.Styles>
  <Border Grid.Row="1">
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="{Binding $parent[2].WindowDecorationMargin}">
      <Grid.RowDefinitions>
        <RowDefinition Height="24"/>
        <RowDefinition Height="24"/>
        <RowDefinition Height="24"/>
        <RowDefinition Height="*" MinHeight="200"/>
        <RowDefinition Height="10"/>
        <RowDefinition Height="150" MinHeight="132" MaxHeight="600"/>
        <RowDefinition Height="4"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="60"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="24"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid Grid.Column="0" Grid.Row="1" Grid.RowSpan="2">
        <Rectangle HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="12" Fill="{Binding NotesViewModel.TrackAccentColor}"/>
        <Border Margin="12,0,0,0" Width="48" Height="48" ClipToBounds="True">
          <Image HorizontalAlignment="Center" VerticalAlignment="Center"
                 Width="50" Height="50" Stretch="UniformToFill" Source="{Binding NotesViewModel.Avatar}"/>
        </Border>
      </Grid>
      <ScrollBar Name="HScrollBar" Classes="music" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 Margin="0,4,0,4" Orientation="Horizontal" AllowAutoHide="False"
                 DataContext="{Binding NotesViewModel}"
                 Maximum="{Binding HScrollBarMax, Mode=OneWay}"
                 Value="{Binding TickOffset}"
                 ViewportSize="{Binding ViewportTicks}"
                 LargeChange="{Binding ViewportTicks}"
                 SmallChange="{Binding SmallChangeX}" PointerWheelChanged="HScrollPointerWheelChanged"/>
      <ScrollBar Name="VScrollBar" Classes="music" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 Margin="4,0,4,0" Orientation="Vertical" AllowAutoHide="False"
                 DataContext="{Binding NotesViewModel}"
                 Maximum="{Binding VScrollBarMax, Mode=OneWay}"
                 Value="{Binding TrackOffset}"
                 ViewportSize="{Binding ViewportTracks}"
                 LargeChange="{Binding ViewportTracks}"
                 SmallChange="{Binding SmallChangeY}" PointerWheelChanged="VScrollPointerWheelChanged"/>
      <c:TrackBackground Grid.Column="0" Grid.Row="3" IsPianoRoll="True" IsKeyboard="True"
                         DataContext="{Binding NotesViewModel}"
                         TrackHeight="{Binding TrackHeight}"
                         TrackOffset="{Binding TrackOffset}"
                         PointerWheelChanged="KeyboardPointerWheelChanged"
                         PointerPressed="KeyboardPointerPressed"
                         PointerMoved="KeyboardPointerMoved"
                         PointerReleased="KeyboardPointerReleased"/>
      <Grid Grid.Column="0" Grid.Row="5">
        <c:ExpSelector Name="expSelector1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top"
                       Index="0" Margin="0,0,0,0" ToolTip.Tip="Alt + 1"/>
        <c:ExpSelector Name="expSelector2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top"
                       Index="1" Margin="0,22,0,0" ToolTip.Tip="Alt + 2"/>
        <c:ExpSelector Name="expSelector3" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top"
                       Index="2" Margin="0,44,0,0" ToolTip.Tip="Alt + 3"/>
        <c:ExpSelector Name="expSelector4" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top"
                       Index="3" Margin="0,66,0,0" ToolTip.Tip="Alt + 4"/>
        <c:ExpSelector Name="expSelector5" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top"
                       Index="4" Margin="0,88,0,0" ToolTip.Tip="Alt + 5"/>
        <Button VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="20" Height="20" Margin="0" Background="Transparent" Click="OnExpButtonClick">
          <Path Classes="clear" Width="24" Height="24"
                Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z"
                Fill="{StaticResource NeutralAccentBrush}">
            <Path.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX=".75" ScaleY=".75"/>
                <TranslateTransform X="0" Y="1"/>
              </TransformGroup>
            </Path.RenderTransform>
          </Path>
        </Button>
      </Grid>
      <Canvas Name="TimelineCanvas" Grid.Row="2" Grid.Column="1"
              Background="Transparent" ClipToBounds="True"
              PointerWheelChanged="TimelinePointerWheelChanged"
              PointerPressed="TimelinePointerPressed"
              PointerMoved="TimelinePointerMoved"
              PointerReleased="TimelinePointerReleased">
        <Path Name="PlayPos"
              Canvas.Left="{Binding NotesViewModel.PlayPosX}"
              Canvas.Top="0" ZIndex="100" IsHitTestVisible="False"
              Fill="{DynamicResource NeutralAccentBrushSemi}"
              Data="M -6.5 0 L 6.5 0 L 6.5 3 L 0 9 L -6.5 3 Z"/>
      </Canvas>
      <c:TrackBackground Grid.Row="3" Grid.Column="1" IsHitTestVisible="False"
                         Foreground="{DynamicResource TrackBackgroundAltBrush}"
                         DataContext="{Binding NotesViewModel}"
                         Bounds="{Binding Bounds, Mode=OneWayToSource}"
                         TrackHeight="{Binding TrackHeight}"
                         TrackOffset="{Binding TrackOffset}" IsPianoRoll="True"/>
      <c:TickBackground Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" IsHitTestVisible="False"
                        Foreground="{DynamicResource TickLineBrush}"
                        Background="{DynamicResource TickLineBrushLow}"
                        Resolution="{Binding PlaybackViewModel.Resolution}"
                        TickWidth="{Binding NotesViewModel.TickWidth}"
                        TickOrigin="{Binding NotesViewModel.TickOrigin}"
                        TickOffset="{Binding NotesViewModel.TickOffset}"
                        SnapDiv="{Binding NotesViewModel.SnapDiv, Mode=OneWay}"
                        SnapTicks="{Binding NotesViewModel.SnapTicks}"
                        ShowBarNumber="True"/>
      <Image Grid.Row="3" Grid.RowSpan="3" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,100,0"
             Source="{Binding NotesViewModel.Portrait}" OpacityMask="{Binding NotesViewModel.PortraitMask}" Stretch="None"/>
      <Border Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
              Margin="0,0,0,60" Height="60" IsHitTestVisible="False">
        <c:WaveformImage DataContext="{Binding NotesViewModel, Mode=OneWay}"
                         TickWidth="{Binding TickWidth, Mode=OneWay}"
                         TickOffset="{Binding TickOffset, Mode=OneWay}"
                         ShowWaveform="{Binding ShowWaveform, Mode=OneWay}"/>
      </Border>
      <c:NotesCanvas Grid.Row="3" Grid.Column="1"
                     TickWidth="{Binding NotesViewModel.TickWidth}"
                     TrackHeight="{Binding NotesViewModel.TrackHeight}"
                     TickOffset="{Binding NotesViewModel.TickOffset}"
                     TrackOffset="{Binding NotesViewModel.TrackOffset}"
                     ShowVibrato="{Binding NotesViewModel.ShowVibrato}"
                     ShowPitch="{Binding NotesViewModel.ShowPitch}"
                     ShowFinalPitch="{Binding NotesViewModel.ShowFinalPitch}"
                     Part="{Binding NotesViewModel.Part}"
                     PointerPressed="NotesCanvasPointerPressed"
                     PointerMoved="NotesCanvasPointerMoved"
                     PointerReleased="NotesCanvasPointerReleased"
                     DoubleTapped="NotesCanvasDoubleTapped"
                     PointerWheelChanged="NotesCanvasPointerWheelChanged">
        <c:NotesCanvas.ContextMenu>
          <ContextMenu ItemsSource="{Binding NotesContextMenuItems}"
                       Opening="NotesContextMenuOpening"
                       Closing="NotesContextMenuClosing">
            <ContextMenu.Styles>
              <Style Selector="MenuItem">
                <Setter Property="Header" Value="{Binding Header}"/>
                <Setter Property="Command" Value="{Binding Command, FallbackValue={x:Null}}"/>
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
                <Setter Property="ItemsSource" Value="{Binding Items}"/>
              </Style>
            </ContextMenu.Styles>
          </ContextMenu>
        </c:NotesCanvas.ContextMenu>
      </c:NotesCanvas>
      <Canvas Grid.Row="3" Grid.Column="1" IsHitTestVisible="False" ClipToBounds="True">
        <Rectangle Name="PlayPosHighlight"
                   Width="{Binding NotesViewModel.PlayPosHighlightWidth, Mode=OneWay}"
                   Height="{Binding $parent.Bounds.Height, Mode=OneWay}"
                   Canvas.Left="{Binding NotesViewModel.PlayPosHighlightX, Mode=OneWay}"
                   Canvas.Top="0" ZIndex="-10"
                   Fill="{DynamicResource NeutralAccentBrushSemi2}"/>
        <Rectangle Name="SelectionBox" StrokeThickness="2"
                   Stroke="{DynamicResource SystemControlForegroundBaseHighBrush}"
                   Fill="{DynamicResource TickLineBrushLow}" ZIndex="1000"
                   IsHitTestVisible="False" IsVisible="False"/>
      </Canvas>
      <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Left" VerticalAlignment="Top"
                  Orientation="Horizontal">
        <Border>
          <Menu Grid.Column="1" Grid.Row="0" Height="20" Background="{DynamicResource SystemControlBackgroundAltHighBrush}"
                Closed="OnMenuClosed" PointerExited="OnMenuPointerLeave">
            <MenuItem Header="{DynamicResource pianoroll.menu.part}">
              <MenuItem Header="{DynamicResource pianoroll.menu.part.singer}" Click="OnMenuSingers"/>
              <MenuItem Header="{DynamicResource pianoroll.menu.searchnote}" Click="OnMenuSearchNote"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource pianoroll.menu.batch}">
              <MenuItem Header="{DynamicResource pianoroll.menu.notes}" ItemsSource="{Binding NoteBatchEdits}">
                <MenuItem.DataTemplates>
                  <DataTemplate DataType="vm:MenuItemViewModel">
                    <MenuItem Header="{Binding Header}" Command="{Binding Command, FallbackValue={x:Null}}" CommandParameter="{Binding CommandParameter}"/>
                  </DataTemplate>
                </MenuItem.DataTemplates>
              </MenuItem>
              <MenuItem Header="{DynamicResource pianoroll.menu.lyrics}" ItemsSource="{Binding LyricBatchEdits}">
                <MenuItem.DataTemplates>
                  <DataTemplate DataType="vm:MenuItemViewModel">
                    <MenuItem Header="{Binding Header}" Command="{Binding Command, FallbackValue={x:Null}}" CommandParameter="{Binding CommandParameter}"/>
                  </DataTemplate>
                </MenuItem.DataTemplates>
              </MenuItem>
              <MenuItem Header="{DynamicResource pianoroll.menu.part.legacypluginexp}" ItemsSource="{Binding LegacyPlugins}" Name="PluginMenu">
                <MenuItem.DataTemplates>
                  <DataTemplate DataType="vm:MenuItemViewModel">
                    <MenuItem Header="{Binding Header}" Command="{Binding Command, FallbackValue={x:Null}}" CommandParameter="{Binding CommandParameter}" Height="{Binding Height}"/>
                  </DataTemplate>
                </MenuItem.DataTemplates>
              </MenuItem>
            </MenuItem>
            <MenuItem Header="{DynamicResource pianoroll.menu.lyrics.edit}" Click="OnMenuEditLyrics"/>
            <MenuItem Header="{DynamicResource pianoroll.menu.notedefaults}" Click="OnMenuNoteDefaults"/>
          </Menu>
        </Border>
        <Border Width="24" Height="20"/>
        <Border>
          <StackPanel Orientation="Horizontal">
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" CornerRadius="2,0,0,2"
                          IsChecked="{Binding NotesViewModel.CursorTool, Mode=OneWay}"
                          Command="{Binding NotesViewModel.SelectToolCommand}" CommandParameter="1"
                          ToolTip.Tip="{DynamicResource pianoroll.tool.selectionv2}">
              <PathIcon Data="{StaticResource cursor}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20"
                          IsChecked="{Binding NotesViewModel.PenTool, Mode=OneWay}"
                          Command="{Binding NotesViewModel.SelectToolCommand}" CommandParameter="2"
                          ToolTip.Tip="{DynamicResource pianoroll.tool.penv2}">
              <PathIcon Data="{StaticResource pen}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20"
                          IsChecked="{Binding NotesViewModel.PenPlusTool, Mode=OneWay}"
                          Command="{Binding NotesViewModel.SelectToolCommand}" CommandParameter="2+"
                          ToolTip.Tip="{DynamicResource pianoroll.tool.penplus}">
              <PathIcon Data="{StaticResource penplus}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20"
                          IsChecked="{Binding NotesViewModel.EraserTool, Mode=OneWay}"
                          Command="{Binding NotesViewModel.SelectToolCommand}" CommandParameter="3"
                          ToolTip.Tip="{DynamicResource pianoroll.tool.eraser}">
              <PathIcon Data="{StaticResource eraser}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20"
                          IsChecked="{Binding NotesViewModel.DrawPitchTool, Mode=OneWay}"
                          Command="{Binding NotesViewModel.SelectToolCommand}" CommandParameter="4"
                          ToolTip.Tip="{DynamicResource pianoroll.tool.drawpitch}">
              <PathIcon Data="{StaticResource drawpitch}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20"
                          IsChecked="{Binding NotesViewModel.KnifeTool, Mode=OneWay}"
                          Command="{Binding NotesViewModel.SelectToolCommand}" CommandParameter="5"
                          ToolTip.Tip="{DynamicResource pianoroll.tool.knife}">
              <PathIcon Data="{StaticResource knife}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
          </StackPanel>
        </Border>
        <Border Width="24" Height="20"/>
        <Border>
          <StackPanel Orientation="Horizontal">
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" CornerRadius="2,0,0,2" IsChecked="{Binding NotesViewModel.ShowTips}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.tips}">
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="?" FontWeight="Bold"
                          Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.PlayTone}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.tone}">
              <PathIcon Data="{StaticResource tone}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.ShowVibrato}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.vibrato}">
              <PathIcon Data="{StaticResource vibrato}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.ShowPitch}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.pitch}">
              <PathIcon Data="{StaticResource pitch}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.ShowFinalPitch}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.finalpitch}">
              <PathIcon Data="{StaticResource finalpitch}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.ShowWaveform}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.waveform}">
              <PathIcon Data="{StaticResource waveform}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.ShowPhoneme}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.phoneme}">
              <PathIcon Data="{StaticResource phoneme}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.ShowNoteParams}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.noteparams}">
              <PathIcon Data="{StaticResource noteparams}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <ToggleButton Name="SnapToggle" Classes="toolbar" Margin="0" Padding="1" Height="20" Width="20" IsChecked="{Binding NotesViewModel.IsSnapOn}"
                          ToolTip.Tip="{DynamicResource pianoroll.toggle.snap}">
              <PathIcon Data="{StaticResource snap}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" Height="12" Width="12"/>
            </ToggleButton>
            <Button Margin="0" Padding="0,1" Height="20" Width="40" Background="Transparent" Click="OnSnapDivMenuButton">
              <TextBlock Grid.Column="0" Text="{Binding NotesViewModel.SnapDivText}"
                         TextAlignment="Right" FontSize="10" FontFamily="monospace"
                         Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
              <Button.ContextMenu>
                <ContextMenu Name="SnapDivMenu" PlacementMode="Bottom" ItemsSource="{Binding NotesViewModel.SnapDivs}" KeyDown="OnSnapDivKeyDown">
                  <ContextMenu.DataTemplates>
                    <DataTemplate DataType="vm:MenuItemViewModel">
                      <MenuItem Header="{Binding Header}" Command="{Binding Command, FallbackValue={x:Null}}" CommandParameter="{Binding CommandParameter}"/>
                    </DataTemplate>
                  </ContextMenu.DataTemplates>
                </ContextMenu>
              </Button.ContextMenu>
            </Button>
          </StackPanel>
        </Border>
      </StackPanel>
      <StackPanel Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                  Margin="12,12,12,70" Orientation="Horizontal">
        <Border>
          <c:SearchBar Name="SearchBar"/>
        </Border>
      </StackPanel>
      <Rectangle Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                 Margin="0,0,0,60" Height="6" Opacity="0.15" IsVisible="{Binding NotesViewModel.ShowPhoneme}">
        <Rectangle.Fill>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,6">
            <GradientStop Color="Transparent" Offset="0"/>
            <GradientStop Color="Black" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>
      <c:PhonemeCanvas Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0" Height="60"
                       Background="{DynamicResource BackgroundBrushSemi}"
                       TickWidth="{Binding NotesViewModel.TickWidth}"
                       TickOffset="{Binding NotesViewModel.TickOffset}"
                       Part="{Binding NotesViewModel.Part}" IsVisible="{Binding NotesViewModel.ShowPhoneme}"
                       DoubleTapped="PhonemeCanvasDoubleTapped"
                       PointerPressed="PhonemeCanvasPointerPressed"
                       PointerMoved="PhonemeCanvasPointerMoved"
                       PointerReleased="PhonemeCanvasPointerReleased"/>
      <GridSplitter Grid.Row="4" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Background="{DynamicResource SystemControlBackgroundAltHighBrush}" Focusable="False" Cursor="SizeNorthSouth"/>
      <c:TrackBackground Grid.Row="5" Grid.Column="1" IsHitTestVisible="False"
                         Foreground="{DynamicResource TrackBackgroundAltBrush}"
                         TrackHeight="{Binding NotesViewModel.ExpTrackHeight}"/>
      <c:TickBackground Grid.Row="5"  Grid.Column="1" IsHitTestVisible="False"
                        Foreground="{DynamicResource TickLineBrush}"
                        Background="{DynamicResource TickLineBrushLow}"
                        Resolution="{Binding PlaybackViewModel.Resolution}"
                        TickWidth="{Binding NotesViewModel.TickWidth}"
                        TickOrigin="{Binding NotesViewModel.TickOrigin}"
                        TickOffset="{Binding NotesViewModel.TickOffset}"
                        SnapDiv="{Binding NotesViewModel.SnapDiv, Mode=OneWay}"/>
      <c:ExpressionCanvas Grid.Row="5" Grid.Column="1" Opacity="{Binding NotesViewModel.ExpShadowOpacity}"
                          TickWidth="{Binding NotesViewModel.TickWidth}"
                          TickOffset="{Binding NotesViewModel.TickOffset}"
                          Part="{Binding NotesViewModel.Part}"
                          Key="{Binding NotesViewModel.SecondaryKey}"/>
      <c:ExpressionCanvas Grid.Row="5" Grid.Column="1"
                          Bounds="{Binding NotesViewModel.ExpBounds, Mode=OneWayToSource}"
                          TickWidth="{Binding NotesViewModel.TickWidth}"
                          TickOffset="{Binding NotesViewModel.TickOffset}"
                          Part="{Binding NotesViewModel.Part}"
                          Key="{Binding NotesViewModel.PrimaryKey}"
                          PointerPressed="ExpCanvasPointerPressed"
                          PointerMoved="ExpCanvasPointerMoved"
                          PointerReleased="ExpCanvasPointerReleased">
      </c:ExpressionCanvas>
      <TextBlock Classes="tips" Grid.Row="5" Grid.Column="1"
                 IsHitTestVisible="False" VerticalAlignment="Bottom" Margin="10,5"
                 IsVisible="{Binding NotesViewModel.PrimaryKeyNotSupported}"
                 Text="{DynamicResource tip.exps.notsupported}"/>
      <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="5"
              IsEnabled="{Binding NotesViewModel.ShowNoteParams}"
              IsVisible="{Binding NotesViewModel.ShowNoteParams}"
              Background="{DynamicResource SystemRegionBrush}" Padding="0">
        <c:NotePropertiesControl/>
      </Border>

      <Border Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              BoxShadow="inset 0 0 5 1 #3F000000" ClipToBounds="True" IsHitTestVisible="False">
        <Grid>
          <Border Classes="tips" HorizontalAlignment="Center" VerticalAlignment="Center"
                IsVisible="{Binding NotesViewModel.ShowTips}" BoxShadow="0 0 5 1 #3F000000">
            <TextBlock Classes="tips" Grid.Column="0" Margin="10,5"
                       Text="{DynamicResource tip.notes.basics}"/>
          </Border>
          <Border Classes="tips" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Padding="4,4,4,2"
                   IsVisible="{Binding NotesViewModel.ShowTips}" BoxShadow="0 0 5 1 #3F000000">
            <TextBlock Classes="tips" Text="{DynamicResource tip.notes.zoomx}"/>
          </Border>
          <Border Classes="tips" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="4,4,4,2"
                   IsVisible="{Binding NotesViewModel.ShowTips}" BoxShadow="0 0 5 1 #3F000000">
            <TextBlock Classes="tips" Text="{DynamicResource tip.notes.zoomy}"/>
          </Border>
          <Border HorizontalAlignment="Center" VerticalAlignment="Center"
                IsVisible="{Binding NotesViewModel.PlayPosWaitingRendering}">
            <TextBlock Text="{DynamicResource progress.waitingrendering}"/>
          </Border>
        </Grid>
      </Border>
      <Grid Grid.Row="3" Grid.Column="1" RowDefinitions="1*,1*">
        <Border Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top"
                BoxShadow="0 0 5 1 #3F000000">
          <c:LyricBox Name="LyricBox" Width="360"/>
        </Border>
      </Grid>
      <Border Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              BoxShadow="inset 0 0 5 1 #3F000000" ClipToBounds="True" IsHitTestVisible="False">
        <Border Classes="tips" HorizontalAlignment="Center" VerticalAlignment="Center"
                IsVisible="{Binding NotesViewModel.ShowTips}" BoxShadow="0 0 5 1 #3F000000">
          <TextBlock Classes="tips" Grid.Column="0" Margin="10,5"
                     Text="{DynamicResource tip.exps}"/>
        </Border>
      </Border>
      <Border Grid.Row="2" Grid.Column="2" Background="Transparent"
              HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" Height="24"
              PointerWheelChanged="ViewScalerPointerWheelChanged">
        <c:ViewScaler Name="VScaler" DataContext="{Binding NotesViewModel}" Value="{Binding TrackHeight}" Min="{Binding TrackHeightMin}" Max="{Binding TrackHeightMax}"/>
      </Border>
      <Canvas Name="ValueTipCanvas" Grid.Column="1" Grid.Row="2" Grid.RowSpan="4" IsHitTestVisible="False">
        <Border Name="ValueTip" BorderThickness="1"
                BorderBrush="{DynamicResource NeutralAccentBrush}"
                Background="{DynamicResource SystemControlBackgroundAltHighBrush}">
          <TextBlock Name="ValueTipText" Margin="2"/>
        </Border>
      </Canvas>
      <ProgressBar Grid.Row="6" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Value="{Binding Progress}"/>
    </Grid>
  </Border>
</Window>
