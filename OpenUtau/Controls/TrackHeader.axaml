<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:OpenUtau.App.ViewModels"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="104"
             x:Class="OpenUtau.App.Controls.TrackHeader" Width="300" TrackNo="{Binding TrackNo}">
  <Design.DataContext>
    <vm:TrackHeaderViewModel/>
  </Design.DataContext>
  <UserControl.Styles>
    <Style Selector="ToggleButton">
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style Selector="Slider.fader">
      <Setter Property="Foreground" Value="{Binding TrackColor.AccentColor}"/>
      
      <Style Selector="^:pointerover">
        <!--<Style Selector="^ /template/ Thumb">
          <Setter Property="Background" Value="{Binding TrackColor.AccentColorLight}" />
        </Style>-->
        <Style Selector="^ /template/ RepeatButton#PART_DecreaseButton">
          <Setter Property="Background" Value="{Binding TrackColor.AccentColorLight}" />
        </Style>
      </Style>
      <Style Selector="^:pressed">
        <!--<Style Selector="^ /template/ Thumb">
          <Setter Property="Background" Value="{Binding TrackColor.AccentColorDark}" />
        </Style>-->
        <Style Selector="^ /template/ RepeatButton#PART_DecreaseButton">
          <Setter Property="Background" Value="{Binding TrackColor.AccentColorDark}" />
        </Style>
      </Style>
    </Style>
  </UserControl.Styles>
  <Border Margin="1,1,1,1" BorderThickness="1" BorderBrush="{DynamicResource NeutralAccentBrushSemi}" CornerRadius="2">
    <Grid Background="Transparent" RowDefinitions="20,20,20,20,20,*" ColumnDefinitions="Auto,1,*,20" VerticalAlignment="Top" ClipToBounds="True">
      <Grid Grid.Row="0" Grid.RowSpan="6" Grid.Column="0" VerticalAlignment="Top">
        <Border BorderThickness="0,0,1,1" Height="101" Width="101" VerticalAlignment="Top" CornerRadius="0,0,2,0"
                BorderBrush="{DynamicResource NeutralAccentBrushSemi}" ClipToBounds="True">
          <Image Source="{Binding Avatar}" Stretch="UniformToFill" VerticalAlignment="Top" ToolTip.Tip="{Binding Singer}"/>
        </Border>
        <Border Background="{Binding TrackAccentColor}" Height="16" Width="22" CornerRadius="1,0,2,0"
                HorizontalAlignment="Left" VerticalAlignment="Top">
          <TextBlock TextAlignment="Center" FontWeight="Bold"
                     Text="{Binding TrackNo}" Foreground="White" VerticalAlignment="Center"/>
        </Border>
      </Grid>
      <Button Classes="clear" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Margin="1" Padding="2,1,0,0" Height="18"
              HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Focusable="False"
              Content="{Binding TrackName}" Click="TrackNameButtonClicked"/>
      <Button Classes="clear" Grid.Row="1" Grid.Column="2" Margin="1" Padding="2,1,0,0" Height="18"
              HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Focusable="False"
              Content="{Binding Singer, TargetNullValue={StaticResource tracks.selectsinger}}" Click="SingerButtonClicked" ContextRequested="SingerButtonContextRequested"
              ToolTip.Tip="{Binding Singer}">
        <Button.ContextMenu>
          <ContextMenu Classes="context" Name="SingersMenu" PlacementMode="Bottom" HorizontalOffset="-3" ItemsSource="{Binding SingerMenuItems}">
            <ContextMenu.Styles>
              <Style Selector="MenuItem">
                <Setter Property="Header" Value="{Binding Header}"/>
                <Setter Property="Command" Value="{Binding Command}"/>
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
                <Setter Property="ItemsSource" Value="{Binding Items}"/>
              </Style>
            </ContextMenu.Styles>
          </ContextMenu>
        </Button.ContextMenu>
      </Button>
      <Button Classes="clear" Grid.Row="2" Grid.Column="2" Margin="1" Padding="2,1,0,0" Height="18"
              HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Focusable="False"
              Content="{Binding PhonemizerTag}" Click="PhonemizerButtonClicked" ContextRequested="PhonemizerButtonContextRequested"
              ToolTip.Tip="{Binding Phonemizer}">
        <Button.ContextMenu>
          <ContextMenu Classes="context" Name="PhonemizersMenu" PlacementMode="Bottom" HorizontalOffset="-3" ItemsSource="{Binding PhonemizerMenuItems}">
            <ContextMenu.Styles>
              <Style Selector="MenuItem">
                <Setter Property="Header" Value="{Binding Header}"/>
                <Setter Property="Command" Value="{Binding Command}"/>
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
                <Setter Property="ItemsSource" Value="{Binding Items}"/>
              </Style>
            </ContextMenu.Styles>
          </ContextMenu>
        </Button.ContextMenu>
      </Button>
      <Button Classes="clear" Grid.Row="3" Grid.Column="2" Margin="1" Padding="2,1,0,0" Height="18"
              HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Focusable="False"
              Content="{Binding Renderer}" Click="RendererButtonClicked" ContextRequested="RendererButtonContextRequested"
              ToolTip.Tip="{DynamicResource tracks.selectrenderer}">
        <Button.ContextMenu>
          <ContextMenu Classes="context" Name="RenderersMenu" PlacementMode="Bottom" HorizontalOffset="-3" ItemsSource="{Binding RenderersMenuItems}">
            <ContextMenu.Styles>
              <Style Selector="MenuItem">
                <Setter Property="Header" Value="{Binding Header}"/>
                <Setter Property="Command" Value="{Binding Command}"/>
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
                <Setter Property="ItemsSource" Value="{Binding Items}"/>
              </Style>
            </ContextMenu.Styles>
          </ContextMenu>
        </Button.ContextMenu>
      </Button>
      <ToggleButton Classes="normal" Grid.Row="1" Grid.Column="3" Margin="1" Padding="0" Height="18"
                    HorizontalAlignment="Stretch"
                    IsChecked="{Binding Mute, Mode=OneWay}" Command="{Binding ToggleMute}">
        <TextBlock Text="M" TextAlignment="Center"/>
        <ToggleButton.ContextMenu>
          <ContextMenu>
            <MenuItem Classes="context" Header="{StaticResource tracks.mute}" Command="{Binding ToggleMute}"/>
            <MenuItem Classes="context" Header="{StaticResource tracks.mute.only}" Command="{Binding MuteOnly}"/>
            <MenuItem Classes="context" Header="{StaticResource tracks.mute.allothers}" Command="{Binding MuteAllOthers}"/>
            <MenuItem Classes="context" Header="{StaticResource tracks.mute.unmuteall}" Command="{Binding UnmuteAll}"/>
          </ContextMenu>
        </ToggleButton.ContextMenu>
      </ToggleButton>
      <ToggleButton Classes="normal" Grid.Row="2" Grid.Column="3" Margin="1" Padding="0" Height="18"
                    HorizontalAlignment="Stretch"
                    IsChecked="{Binding Solo, Mode=OneWay}" Command="{Binding ToggleSolo}">
        <TextBlock Text="S" TextAlignment="Center"/>
        <ToggleButton.ContextMenu>
          <ContextMenu>
            <MenuItem Classes="context" Header="{StaticResource tracks.solo.only}" Command="{Binding ToggleSolo}"/>
            <MenuItem Classes="context" Header="{StaticResource tracks.solo.add}" Command="{Binding SoloAdditionally}"/>
            <MenuItem Classes="context" Header="{StaticResource tracks.solo.unsoloall}" Command="{Binding UnsoloAll}"/>
          </ContextMenu>
        </ToggleButton.ContextMenu>
      </ToggleButton>
      <Button Grid.Row="3" Grid.Column="3" Margin="1" Padding="0" Height="18" Background="Transparent"
                    HorizontalAlignment="Stretch" Click="TrackSettingsButtonClicked">
        <PathIcon Height="12" Width="12" Foreground="{StaticResource NeutralAccentBrush}" Data="{StaticResource preferences}"/>
      </Button>
      <Grid Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2">
        <Slider Name="VolumeSlider" Margin="1,0,0,0" Width="102" HorizontalAlignment="Left" Classes="fader" Minimum="-24" Maximum="12" Value="{Binding Volume}"
                PointerPressed="VolumeFaderPointerPressed" ValueChanged="VolumeOrPanSliderValueChanged"
                ContextRequested="VolumeFaderContextRequested" IsEnabled="{Binding !Muted}"/>
        <TextBlock Margin="106,3,0,0" Width="24" HorizontalAlignment="Left" Background="Transparent"
                   TextAlignment="Center" FontSize="9" FontFamily="monospace" PointerPressed="VolumePointerPressed">
          <TextBlock.Text>
            <MultiBinding StringFormat="{}{0:+#00.0;-#00.0}">
              <Binding Path="Volume"/>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        <TextBox Name="VolumeTextBox" Margin="106,3,0,0" Width="28" MinWidth="28" Height="16" MinHeight="16"
                 HorizontalAlignment="Left" BorderThickness="0" Padding="2,0" IsVisible="False" IsEnabled="False"
                 TextAlignment="Right" FontSize="9" FontFamily="monospace"
                 KeyDown="VolumeOrPanTextBoxKeyDown" LostFocus="VolumeOrPanTextBoxLostFocus"/>
        <Slider Name="PanSlider" Margin="134,0,0,0" Width="36" HorizontalAlignment="Left"
                Classes="fader" Minimum="-100" Maximum="100" Value="{Binding Pan}"
                PointerPressed="PanFaderPointerPressed" ValueChanged="VolumeOrPanSliderValueChanged"
                ContextRequested="PanFaderContextRequested" IsEnabled="{Binding !Muted}"/>
        <TextBlock Margin="0,3,4,0" Width="20" HorizontalAlignment="Right" Background="Transparent"
                   TextAlignment="Right" FontSize="9" FontFamily="monospace" PointerPressed="PanPointerPressed">
          <TextBlock.Text>
            <MultiBinding StringFormat="{}{0:00R;00L;C}">
              <Binding Path="Pan"/>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        <TextBox Name="PanTextBox" Margin="0,3,2,0" Width="24" MinWidth="24" Height="16" MinHeight="16"
                 HorizontalAlignment="Right" BorderThickness="0" Padding="2,0" IsVisible="False" IsEnabled="False"
                 TextAlignment="Right" FontSize="9" FontFamily="monospace"
                 KeyDown="VolumeOrPanTextBoxKeyDown" LostFocus="VolumeOrPanTextBoxLostFocus"/>
      </Grid>
      <Grid.ContextMenu>
        <ContextMenu>
          <MenuItem Classes="context" Header="{DynamicResource tracks.remove}" Command="{Binding Remove}"/>
          <MenuItem Classes="context" Header="{DynamicResource tracks.moveup}" Command="{Binding MoveUp}"/>
          <MenuItem Classes="context" Header="{DynamicResource tracks.movedown}" Command="{Binding MoveDown}"/>
          <MenuItem Classes="context" Header="{DynamicResource tracks.rename}" Command="{Binding Rename}"/>
          <MenuItem Classes="context" Header="{DynamicResource tracks.trackcolor}" Command="{Binding SelectTrackColor}"/>
          <MenuItem Classes="context" Header="{DynamicResource tracks.duplicate}" Command="{Binding Duplicate}"/>
          <MenuItem Classes="context" Header="{DynamicResource tracks.duplicatesettings}" Command="{Binding DuplicateSettings}"/>
          <MenuItem Classes="context" Header="{DynamicResource dialogs.voicecolorremapping}" Command="{Binding VoiceColorRemapping}"/>
        </ContextMenu>
      </Grid.ContextMenu>
    </Grid>
  </Border>
</UserControl>
